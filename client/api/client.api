public abstract class org/inthewaves/kotlinsignald/AccessControlUpdate {
	public final fun getGroupAccessControlBody ()Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/GroupAccessControl;
}

public final class org/inthewaves/kotlinsignald/AccessControlUpdate$Attributes : org/inthewaves/kotlinsignald/AccessControlUpdate {
	public fun <init> (Lorg/inthewaves/kotlinsignald/AccessRequired;)V
	public fun getAccessRequired ()Lorg/inthewaves/kotlinsignald/AccessRequired;
	public synthetic fun getAccessRequired$client ()Lorg/inthewaves/kotlinsignald/AccessRequired;
}

public final class org/inthewaves/kotlinsignald/AccessControlUpdate$GroupLink : org/inthewaves/kotlinsignald/AccessControlUpdate {
	public fun <init> (Lorg/inthewaves/kotlinsignald/GroupLinkStatus;)V
}

public final class org/inthewaves/kotlinsignald/AccessControlUpdate$Members : org/inthewaves/kotlinsignald/AccessControlUpdate {
	public fun <init> (Lorg/inthewaves/kotlinsignald/AccessRequired;)V
	public fun getAccessRequired ()Lorg/inthewaves/kotlinsignald/AccessRequired;
	public synthetic fun getAccessRequired$client ()Lorg/inthewaves/kotlinsignald/AccessRequired;
}

public final class org/inthewaves/kotlinsignald/AccessRequired : java/lang/Enum {
	public static final field ADMINISTRATOR Lorg/inthewaves/kotlinsignald/AccessRequired;
	public static final field ANY Lorg/inthewaves/kotlinsignald/AccessRequired;
	public static final field MEMBER Lorg/inthewaves/kotlinsignald/AccessRequired;
	public static final field UNKNOWN Lorg/inthewaves/kotlinsignald/AccessRequired;
	public static final field UNRECOGNIZED Lorg/inthewaves/kotlinsignald/AccessRequired;
	public static final field UNSATISFIABLE Lorg/inthewaves/kotlinsignald/AccessRequired;
	public final fun getValue ()I
	public static fun valueOf (Ljava/lang/String;)Lorg/inthewaves/kotlinsignald/AccessRequired;
	public static fun values ()[Lorg/inthewaves/kotlinsignald/AccessRequired;
}

public abstract class org/inthewaves/kotlinsignald/Fingerprint {
}

public final class org/inthewaves/kotlinsignald/Fingerprint$QrCodeData : org/inthewaves/kotlinsignald/Fingerprint {
	public fun <init> (Ljava/lang/String;)V
	public final fun getQrCodeData ()Ljava/lang/String;
}

public final class org/inthewaves/kotlinsignald/Fingerprint$SafetyNumber : org/inthewaves/kotlinsignald/Fingerprint {
	public fun <init> (Ljava/lang/String;)V
	public final fun getSafetyNumber ()Ljava/lang/String;
}

public final class org/inthewaves/kotlinsignald/GroupLinkStatus : java/lang/Enum {
	public static final field OFF Lorg/inthewaves/kotlinsignald/GroupLinkStatus;
	public static final field ON_NO_ADMIN_APPROVAL Lorg/inthewaves/kotlinsignald/GroupLinkStatus;
	public static final field ON_WITH_ADMIN_APPROVAL Lorg/inthewaves/kotlinsignald/GroupLinkStatus;
	public static fun valueOf (Ljava/lang/String;)Lorg/inthewaves/kotlinsignald/GroupLinkStatus;
	public static fun values ()[Lorg/inthewaves/kotlinsignald/GroupLinkStatus;
}

public abstract interface class org/inthewaves/kotlinsignald/GroupUpdate {
}

public final class org/inthewaves/kotlinsignald/GroupUpdate$AddMembers : org/inthewaves/kotlinsignald/GroupUpdate {
	public fun <init> (Ljava/lang/Iterable;)V
	public final fun getMembersToAdd ()Ljava/lang/Iterable;
}

public final class org/inthewaves/kotlinsignald/GroupUpdate$Avatar : org/inthewaves/kotlinsignald/GroupUpdate {
	public fun <init> (Ljava/lang/String;)V
	public final fun getNewAvatarPath ()Ljava/lang/String;
}

public final class org/inthewaves/kotlinsignald/GroupUpdate$Description : org/inthewaves/kotlinsignald/GroupUpdate {
	public fun <init> (Ljava/lang/String;)V
	public final fun getNewDescription ()Ljava/lang/String;
}

public final class org/inthewaves/kotlinsignald/GroupUpdate$RemoveMembers : org/inthewaves/kotlinsignald/GroupUpdate {
	public fun <init> (Ljava/lang/Iterable;)V
	public final fun getMembersToRemove ()Ljava/lang/Iterable;
}

public final class org/inthewaves/kotlinsignald/GroupUpdate$ResetLink : org/inthewaves/kotlinsignald/GroupUpdate {
	public static final field INSTANCE Lorg/inthewaves/kotlinsignald/GroupUpdate$ResetLink;
}

public final class org/inthewaves/kotlinsignald/GroupUpdate$Title : org/inthewaves/kotlinsignald/GroupUpdate {
	public fun <init> (Ljava/lang/String;)V
	public final fun getNewTitle ()Ljava/lang/String;
}

public final class org/inthewaves/kotlinsignald/GroupUpdate$UpdateAccessControl : org/inthewaves/kotlinsignald/GroupUpdate {
	public fun <init> (Lorg/inthewaves/kotlinsignald/AccessControlUpdate;)V
	public final fun getGroupAccessControl ()Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/GroupAccessControl;
}

public final class org/inthewaves/kotlinsignald/GroupUpdate$UpdateExpirationTimer : org/inthewaves/kotlinsignald/GroupUpdate {
	public fun <init> (I)V
	public final fun getNewTimerSeconds ()I
}

public final class org/inthewaves/kotlinsignald/GroupUpdate$UpdateRole : org/inthewaves/kotlinsignald/GroupUpdate {
	public fun <init> (Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/GroupMember;)V
	public final fun getMemberWithUpdatedRole ()Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/GroupMember;
}

public abstract interface class org/inthewaves/kotlinsignald/IncomingMessageSubscription : java/lang/AutoCloseable {
	public abstract fun close ()V
	public abstract fun getInitialMessagesCount ()I
	public abstract fun nextMessage ()Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/ClientMessageWrapper;
	public abstract fun nextMessageSuspend (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class org/inthewaves/kotlinsignald/PersistentSocketWrapper : java/lang/AutoCloseable, org/inthewaves/kotlinsignald/clientprotocol/SocketCommunicator {
	public static final field Companion Lorg/inthewaves/kotlinsignald/PersistentSocketWrapper$Companion;
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun close ()V
	public final fun getVersion ()Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonVersionMessage;
	public fun readLine ()Ljava/lang/String;
	public fun submit (Ljava/lang/String;)Ljava/lang/String;
}

public final class org/inthewaves/kotlinsignald/PersistentSocketWrapper$Companion {
	public final fun create (Ljava/lang/String;)Lorg/inthewaves/kotlinsignald/PersistentSocketWrapper;
}

public abstract class org/inthewaves/kotlinsignald/Recipient {
	public static final field Companion Lorg/inthewaves/kotlinsignald/Recipient$Companion;
	public static final fun forGroup (Ljava/lang/String;)Lorg/inthewaves/kotlinsignald/Recipient$Group;
	public static final fun forIndividual (Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;)Lorg/inthewaves/kotlinsignald/Recipient$Individual;
	public static final fun forNumber (Ljava/lang/String;)Lorg/inthewaves/kotlinsignald/Recipient$Individual;
	public static final fun forReply (Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/IncomingMessage;)Lorg/inthewaves/kotlinsignald/Recipient;
	public static final fun forUUID (Ljava/lang/String;)Lorg/inthewaves/kotlinsignald/Recipient$Individual;
}

public final class org/inthewaves/kotlinsignald/Recipient$Companion {
	public final fun forGroup (Ljava/lang/String;)Lorg/inthewaves/kotlinsignald/Recipient$Group;
	public final fun forIndividual (Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;)Lorg/inthewaves/kotlinsignald/Recipient$Individual;
	public final fun forNumber (Ljava/lang/String;)Lorg/inthewaves/kotlinsignald/Recipient$Individual;
	public final fun forReply (Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/IncomingMessage;)Lorg/inthewaves/kotlinsignald/Recipient;
	public final fun forUUID (Ljava/lang/String;)Lorg/inthewaves/kotlinsignald/Recipient$Individual;
}

public final class org/inthewaves/kotlinsignald/Recipient$Group : org/inthewaves/kotlinsignald/Recipient {
	public fun <init> (Ljava/lang/String;)V
	public final fun getGroupID ()Ljava/lang/String;
}

public final class org/inthewaves/kotlinsignald/Recipient$Individual : org/inthewaves/kotlinsignald/Recipient {
	public fun <init> (Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;)V
	public final fun getAddress ()Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;
}

public final class org/inthewaves/kotlinsignald/Signal : org/inthewaves/kotlinsignald/SignaldClient {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun acceptInvitation (Ljava/lang/String;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonGroupV2Info;
	public final fun addDevice (Ljava/lang/String;)V
	public final fun addServer (Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/Server;)Ljava/lang/String;
	public final fun approveMembership (Ljava/lang/String;Ljava/lang/Iterable;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonGroupV2Info;
	public final fun createGroup (Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonGroupV2Info;
	public static synthetic fun createGroup$default (Lorg/inthewaves/kotlinsignald/Signal;Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;ILjava/lang/Object;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonGroupV2Info;
	public final fun deleteAccount (Z)V
	public final fun deleteServer (Ljava/lang/String;)V
	public final fun finishLink (Ljava/lang/String;Ljava/lang/String;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/Account;
	public final fun generateLinkingUri (Ljava/lang/String;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/LinkingURI;
	public static synthetic fun generateLinkingUri$default (Lorg/inthewaves/kotlinsignald/Signal;Ljava/lang/String;ILjava/lang/Object;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/LinkingURI;
	public final fun getAccountId ()Ljava/lang/String;
	public final fun getAccountInfo ()Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/Account;
	public final fun getAllIdentities ()Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/AllIdentityKeyList;
	public final fun getGroup (Ljava/lang/String;Ljava/lang/Integer;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonGroupV2Info;
	public static synthetic fun getGroup$default (Lorg/inthewaves/kotlinsignald/Signal;Ljava/lang/String;Ljava/lang/Integer;ILjava/lang/Object;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonGroupV2Info;
	public final fun getGroupLinkInfo (Ljava/lang/String;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonGroupJoinInfo;
	public final fun getIdentities (Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/IdentityKeyList;
	public final fun getLinkedDevices ()Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/LinkedDevices;
	public final fun getProfile (Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;Z)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/Profile;
	public static synthetic fun getProfile$default (Lorg/inthewaves/kotlinsignald/Signal;Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;ZILjava/lang/Object;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/Profile;
	public final fun getServers ()Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/ServerList;
	public final fun isRegisteredWithSignald ()Z
	public final fun joinGroup (Ljava/lang/String;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonGroupJoinInfo;
	public final fun leaveGroup (Ljava/lang/String;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/GroupInfo;
	public final fun listAccounts ()Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/AccountList;
	public final fun listContacts (Ljava/lang/Boolean;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/ProfileList;
	public static synthetic fun listContacts$default (Lorg/inthewaves/kotlinsignald/Signal;Ljava/lang/Boolean;ILjava/lang/Object;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/ProfileList;
	public final fun listGroups ()Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/GroupList;
	public final fun markRead (Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;Ljava/lang/Iterable;J)V
	public static synthetic fun markRead$default (Lorg/inthewaves/kotlinsignald/Signal;Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;Ljava/lang/Iterable;JILjava/lang/Object;)V
	public final fun react (Lorg/inthewaves/kotlinsignald/Recipient;Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonReaction;J)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/SendResponse;
	public static synthetic fun react$default (Lorg/inthewaves/kotlinsignald/Signal;Lorg/inthewaves/kotlinsignald/Recipient;Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonReaction;JILjava/lang/Object;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/SendResponse;
	public final fun register (ZLjava/lang/String;)V
	public static synthetic fun register$default (Lorg/inthewaves/kotlinsignald/Signal;ZLjava/lang/String;ILjava/lang/Object;)V
	public final fun remoteConfig ()Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/RemoteConfigList;
	public final fun remoteDelete (Lorg/inthewaves/kotlinsignald/Recipient;J)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/SendResponse;
	public final fun removeLinkedDevice (J)V
	public final fun requestSync (ZZZZ)V
	public static synthetic fun requestSync$default (Lorg/inthewaves/kotlinsignald/Signal;ZZZZILjava/lang/Object;)V
	public final fun resetSession (Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;J)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/SendResponse;
	public static synthetic fun resetSession$default (Lorg/inthewaves/kotlinsignald/Signal;Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;JILjava/lang/Object;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/SendResponse;
	public final fun resolveAddress (Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;
	public final fun send (Lorg/inthewaves/kotlinsignald/Recipient;Ljava/lang/String;Ljava/lang/Iterable;Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonQuote;Ljava/lang/Iterable;J)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/SendResponse;
	public static synthetic fun send$default (Lorg/inthewaves/kotlinsignald/Signal;Lorg/inthewaves/kotlinsignald/Recipient;Ljava/lang/String;Ljava/lang/Iterable;Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonQuote;Ljava/lang/Iterable;JILjava/lang/Object;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/SendResponse;
	public final fun sendPayment (Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/Payment;J)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/SendResponse;
	public static synthetic fun sendPayment$default (Lorg/inthewaves/kotlinsignald/Signal;Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/Payment;JILjava/lang/Object;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/SendResponse;
	public final fun setDeviceName (Ljava/lang/String;)V
	public final fun setExpiration (Lorg/inthewaves/kotlinsignald/Recipient;I)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/SendResponse;
	public final fun setProfile (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun subscribe ()Lorg/inthewaves/kotlinsignald/IncomingMessageSubscription;
	public fun subscribe ()Lorg/inthewaves/kotlinsignald/subscription/Subscription;
	public final fun subscribeAndConsumeBlocking (Lkotlin/jvm/functions/Function1;)V
	public fun subscribeSuspend (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun trust (Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;Lorg/inthewaves/kotlinsignald/Fingerprint;Lorg/inthewaves/kotlinsignald/TrustLevel;)V
	public static synthetic fun trust$default (Lorg/inthewaves/kotlinsignald/Signal;Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;Lorg/inthewaves/kotlinsignald/Fingerprint;Lorg/inthewaves/kotlinsignald/TrustLevel;ILjava/lang/Object;)V
	public final fun typing (Lorg/inthewaves/kotlinsignald/Recipient;ZJ)V
	public static synthetic fun typing$default (Lorg/inthewaves/kotlinsignald/Signal;Lorg/inthewaves/kotlinsignald/Recipient;ZJILjava/lang/Object;)V
	public final fun updateContact (Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)V
	public static synthetic fun updateContact$default (Lorg/inthewaves/kotlinsignald/Signal;Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonAddress;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;ILjava/lang/Object;)V
	public final fun updateGroup (Ljava/lang/String;Lorg/inthewaves/kotlinsignald/GroupUpdate;)Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/GroupInfo;
	public final fun verify (Ljava/lang/String;)V
	public final fun version ()Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonVersionMessage;
}

public abstract interface class org/inthewaves/kotlinsignald/SignaldClient {
	public abstract fun subscribe ()Lorg/inthewaves/kotlinsignald/IncomingMessageSubscription;
	public abstract fun subscribeSuspend (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class org/inthewaves/kotlinsignald/SocketUnavailableException : java/io/IOException {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
}

public final class org/inthewaves/kotlinsignald/SocketWrapper : org/inthewaves/kotlinsignald/clientprotocol/SocketCommunicator {
	public static final field Companion Lorg/inthewaves/kotlinsignald/SocketWrapper$Companion;
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun close ()V
	public final fun getActualSocketPath ()Ljava/lang/String;
	public final fun getVersion ()Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/JsonVersionMessage;
	public fun readLine ()Ljava/lang/String;
	public fun submit (Ljava/lang/String;)Ljava/lang/String;
}

public final class org/inthewaves/kotlinsignald/SocketWrapper$Companion {
	public final fun create (Ljava/lang/String;)Lorg/inthewaves/kotlinsignald/SocketWrapper;
}

public final class org/inthewaves/kotlinsignald/TrustLevel : java/lang/Enum {
	public static final field TRUSTED_UNVERIFIED Lorg/inthewaves/kotlinsignald/TrustLevel;
	public static final field TRUSTED_VERIFIED Lorg/inthewaves/kotlinsignald/TrustLevel;
	public static final field UNTRUSTED Lorg/inthewaves/kotlinsignald/TrustLevel;
	public static fun valueOf (Ljava/lang/String;)Lorg/inthewaves/kotlinsignald/TrustLevel;
	public static fun values ()[Lorg/inthewaves/kotlinsignald/TrustLevel;
}

public final class org/inthewaves/kotlinsignald/subscription/Subscription : org/inthewaves/kotlinsignald/IncomingMessageSubscription {
	public fun close ()V
	public final fun getAccountId ()Ljava/lang/String;
	public fun getInitialMessagesCount ()I
	public fun nextMessage ()Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/ClientMessageWrapper;
	public fun nextMessageSuspend (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun unsubscribe ()Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/SubscriptionResponse;
}

