public final class org/inthewaves/kotlinsignald/ChannelMessageSubscriptionHandler : org/inthewaves/kotlinsignald/CoroutineMessageSubscriptionHandler {
	public fun <init> (Lorg/inthewaves/kotlinsignald/Signal;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lorg/inthewaves/kotlinsignald/Signal;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getMessages ()Lkotlinx/coroutines/channels/ReceiveChannel;
}

public final class org/inthewaves/kotlinsignald/ChannelMessageSubscriptionHandlerKt {
	public static final fun signalMessagesChannel (Lkotlinx/coroutines/CoroutineScope;Lorg/inthewaves/kotlinsignald/Signal;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/channels/ReceiveChannel;
	public static synthetic fun signalMessagesChannel$default (Lkotlinx/coroutines/CoroutineScope;Lorg/inthewaves/kotlinsignald/Signal;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/channels/ReceiveChannel;
}

public abstract class org/inthewaves/kotlinsignald/CoroutineMessageSubscriptionHandler : org/inthewaves/kotlinsignald/MessageSubscriptionHandler {
	public static final field Companion Lorg/inthewaves/kotlinsignald/CoroutineMessageSubscriptionHandler$Companion;
	public fun <init> (Lorg/inthewaves/kotlinsignald/Signal;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)V
	public synthetic fun <init> (Lorg/inthewaves/kotlinsignald/Signal;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun close ()V
	protected final fun getEmissionJob ()Lkotlinx/coroutines/Job;
	protected abstract fun onCompletion ()V
	protected abstract fun sendMessage (Lorg/inthewaves/kotlinsignald/clientprotocol/v1/structures/ClientMessageWrapper;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class org/inthewaves/kotlinsignald/CoroutineMessageSubscriptionHandler$Companion {
}

public final class org/inthewaves/kotlinsignald/FlowMessageSubscriptionHandler : org/inthewaves/kotlinsignald/CoroutineMessageSubscriptionHandler {
	public fun <init> (Lorg/inthewaves/kotlinsignald/Signal;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;IILkotlinx/coroutines/channels/BufferOverflow;)V
	public synthetic fun <init> (Lorg/inthewaves/kotlinsignald/Signal;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;IILkotlinx/coroutines/channels/BufferOverflow;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getMessages ()Lkotlinx/coroutines/flow/SharedFlow;
}

public final class org/inthewaves/kotlinsignald/FlowMessageSubscriptionHandlerKt {
	public static final fun signalMessagesSharedFlow (Lkotlinx/coroutines/CoroutineScope;Lorg/inthewaves/kotlinsignald/Signal;Lkotlin/coroutines/CoroutineContext;IILkotlinx/coroutines/channels/BufferOverflow;)Lkotlinx/coroutines/flow/SharedFlow;
	public static synthetic fun signalMessagesSharedFlow$default (Lkotlinx/coroutines/CoroutineScope;Lorg/inthewaves/kotlinsignald/Signal;Lkotlin/coroutines/CoroutineContext;IILkotlinx/coroutines/channels/BufferOverflow;ILjava/lang/Object;)Lkotlinx/coroutines/flow/SharedFlow;
}

