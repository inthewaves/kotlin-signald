// File is generated by ./gradlew generateSignaldClasses --- do not edit unless reformatting
package org.inthewaves.kotlinsignald.clientprotocol.v1.structures

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * Represents a group change made by a user. This can also represent request link invites. Only the
 * fields relevant to the group change performed will be set. Note that in signald, group changes are
 * currently only received from incoming messages from a message subscription.
 */
@Serializable
public data class GroupChange(
    /**
     * The user that made the change.
     */
    public val editor: JsonAddress? = null,
    /**
     * The group revision that this change brings the group to.
     */
    public val revision: Int? = null,
    /**
     * Represents users have been added to the group. This can be from group members adding users,
     * or a users joining via a group link that required no approval.
     */
    @SerialName("new_members")
    public val newMembers: List<GroupMember> = emptyList(),
    /**
     * Represents users that have been removed from the group. This can be from admins removing
     * users, or users choosing to leave the group
     */
    @SerialName("delete_members")
    public val deleteMembers: List<JsonAddress> = emptyList(),
    /**
     * Represents users with their new, modified role.
     */
    @SerialName("modify_member_roles")
    public val modifyMemberRoles: List<GroupMember> = emptyList(),
    /**
     * Represents users that have rotated their profile key. Note that signald currently does not
     * expose profile keys to clients. The joined revision property will always be 0 in this list.
     */
    @SerialName("modified_profile_keys")
    public val modifiedProfileKeys: List<GroupMember> = emptyList(),
    /**
     * Represents a user that has been invited to the group by another user.
     */
    @SerialName("new_pending_members")
    public val newPendingMembers: List<GroupPendingMember> = emptyList(),
    @SerialName("delete_pending_members")
    public val deletePendingMembers: List<JsonAddress> = emptyList(),
    @SerialName("promote_pending_members")
    public val promotePendingMembers: List<GroupMember> = emptyList(),
    @SerialName("new_banned_members")
    public val newBannedMembers: List<BannedGroupMember> = emptyList(),
    @SerialName("new_unbanned_members")
    public val newUnbannedMembers: List<BannedGroupMember> = emptyList(),
    @SerialName("new_title")
    public val newTitle: String? = null,
    /**
     * Whether this group change changed the avatar.
     */
    @SerialName("new_avatar")
    public val newAvatar: Boolean? = null,
    /**
     * New disappearing messages timer value.
     */
    @SerialName("new_timer")
    public val newTimer: Int? = null,
    /**
     * If not null, then this group change modified one of the access controls. Some of the
     * properties in here will be null.
     */
    @SerialName("new_access_control")
    public val newAccessControl: GroupAccessControl? = null,
    /**
     * Represents users that have requested to join the group via the group link. Note that members
     * requesting to join might not necessarily have the list of users in the group, so they won't be
     * able to send a peer-to-peer group update message to inform users of their request to join. Other
     * users in the group may inform us that the revision has increased, but the members requesting
     * access will have to be obtained from the server instead (which signald will handle). For now, a
     * get_group request has to be made to get the users that have requested to join the group.
     */
    @SerialName("new_requesting_members")
    public val newRequestingMembers: List<GroupRequestingMember> = emptyList(),
    @SerialName("delete_requesting_members")
    public val deleteRequestingMembers: List<JsonAddress> = emptyList(),
    @SerialName("promote_requesting_members")
    public val promoteRequestingMembers: List<GroupMember> = emptyList(),
    /**
     * Whether this group change involved resetting the group invite link.
     */
    @SerialName("new_invite_link_password")
    public val newInviteLinkPassword: Boolean? = null,
    @SerialName("new_description")
    public val newDescription: String? = null,
    /**
     * Whether this change affected the announcement group setting. Possible values are UNKNOWN,
     * ENABLED or DISABLED
     */
    @SerialName("new_is_announcement_group")
    public val newIsAnnouncementGroup: String? = null
)
